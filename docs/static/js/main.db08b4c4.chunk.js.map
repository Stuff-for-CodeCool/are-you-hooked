{"version":3,"sources":["App.js","index.js"],"names":["API_URL","App","useState","isSearching","setIsSearching","employees","setEmployees","filteredEmployees","setFilteredEmployees","error","setError","password","setPassword","verify","setVerify","useEffect","a","fetch","response","json","result","data","fetchEmployees","updateSalary","id","difference","employee","find","m","salary","parseInt","employee_salary","method","status","updateEmployees","newEmployees","map","handleDecrease","e","preventDefault","target","dataset","handleIncrease","className","type","onChange","errorStates","value","length","match","errorMessages","errors","filter","_","i","join","placeholder","onClick","onBlur","autoFocus","employee_name","toLowerCase","includes","employee_age","data-id","href","render","document","getElementById"],"mappings":"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","file":"static/js/main.db08b4c4.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst API_URL = \"http://dummy.restapiexample.com/api/v1/\";\n\nconst App = () => {\n    const [isSearching, setIsSearching] = useState(false);\n    const [employees, setEmployees] = useState([]);\n    const [filteredEmployees, setFilteredEmployees] = useState(employees);\n\n    const [error, setError] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [verify, setVerify] = useState(\"\");\n\n    useEffect(() => {\n        const fetchEmployees = async () => {\n            const response = await fetch(API_URL + \"employees\");\n            const result = await response.json();\n\n            setEmployees(result.data);\n            setFilteredEmployees(result.data);\n        };\n\n        fetchEmployees();\n    }, []);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        setFilteredEmployees(\n            e.target.value.length\n                ? employees.filter((m) =>\n                      m.employee_name\n                          .toLowerCase()\n                          .includes(e.target.value.toLowerCase())\n                  )\n                : employees\n        );\n        setError(\"\");\n    };\n\n    const updateSalary = async (id, difference) => {\n        const employee = employees.find((m) => m.id === id);\n        if (employee) {\n            const salary = parseInt(employee.employee_salary, 10) + difference;\n            const response = await fetch(\n                `${API_URL}update/${id}?employee_salary=${salary}`,\n                { method: \"PUT\" }\n            );\n            const result = await response.json();\n\n            if (result.status === \"success\") {\n                return result.data.employee_salary;\n            }\n        }\n        return null;\n    };\n\n    const updateEmployees = async (id, difference) => {\n        const salary = await updateSalary(id, difference);\n        if (salary) {\n            const newEmployees = employees.map((m) => ({\n                ...m,\n                employee_salary: m.id === id ? salary : m.employee_salary,\n            }));\n            setEmployees(newEmployees);\n            setFilteredEmployees(newEmployees);\n        }\n    };\n\n    const handleDecrease = async (e) => {\n        e.preventDefault();\n        updateEmployees(e.target.dataset.id, -20);\n    };\n\n    const handleIncrease = (e) => {\n        e.preventDefault();\n        updateEmployees(e.target.dataset.id, 20);\n    };\n\n    const verifyPassword = (e) => {\n        e.preventDefault();\n\n        const errorStates = [\n            e.target.value.length < 8,\n            e.target.value.match(/[0-9]+/g) === null,\n            e.target.value.match(/[a-z]+/g) === null,\n            e.target.value.match(/[A-Z]+/g) === null,\n            e.target.value.match(/[!\"#$%&'()*+,./:;<=>?@\\[\\]^_`{\\|}~-]+/g) ===\n                null,\n        ];\n        const errorMessages = [\n            \"at least 8 characters\",\n            \"digits\",\n            \"lowercase characters\",\n            \"uppercase characters\",\n            \"special characters\",\n        ];\n\n        const errors = errorMessages.filter((_, i) => errorStates[i]);\n\n        if (errors.length) {\n            setError(\n                errors.length === errorMessages.length\n                    ? \"\"\n                    : \"Password should contain \" + errors.join(\", \")\n            );\n        } else setError(\"\");\n\n        setPassword(e.target.value);\n    };\n\n    const verifyVerification = (e) => {\n        e.preventDefault();\n        setError(password !== e.target.value ? \"Passwords do not match\" : \"\");\n        setVerify(e.target.value);\n    };\n\n    return (\n        <>\n            <header>\n                <div className=\"container\">\n                    <h1 className=\"logo\">Are you Hooked?</h1>\n                </div>\n            </header>\n\n            <section>\n                <div className=\"container\">\n                    {error ? <p className=\"error\">{error}</p> : null}\n                    <input\n                        type=\"password\"\n                        onChange={verifyPassword}\n                        value={password}\n                        placeholder=\"Enter your password\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={verifyVerification}\n                        value={verify}\n                        placeholder=\"Verify your password\"\n                    />\n                </div>\n            </section>\n\n            <section>\n                <div className=\"container\">\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th\n                                    onClick={() => setIsSearching(true)}\n                                    onBlur={() => setIsSearching(false)}\n                                >\n                                    {isSearching ? (\n                                        <input\n                                            type=\"text\"\n                                            autoFocus={true}\n                                            placeholder=\"Name...\"\n                                            onChange={handleSearch}\n                                        />\n                                    ) : (\n                                        \"Name\"\n                                    )}\n                                </th>\n                                <th>Age</th>\n                                <th>Salary</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {filteredEmployees.map(\n                                ({\n                                    id,\n                                    employee_name,\n                                    employee_age,\n                                    employee_salary,\n                                }) => (\n                                    <tr key={id}>\n                                        <th>{id}</th>\n                                        <td>{employee_name}</td>\n                                        <td>{employee_age}</td>\n                                        <td>\n                                            <button\n                                                data-id={id}\n                                                onClick={handleDecrease}\n                                            >\n                                                -\n                                            </button>\n                                            <span>{employee_salary}</span>\n                                            <button\n                                                data-id={id}\n                                                onClick={handleIncrease}\n                                            >\n                                                +\n                                            </button>\n                                        </td>\n                                    </tr>\n                                )\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n            </section>\n\n            <footer>\n                <div className=\"container\">\n                    <p>\n                        API provided by{\" \"}\n                        <a href=\"http://www.dummy.restapiexample.com/\">\n                            Dummy sample REST API\n                        </a>\n                    </p>\n                </div>\n            </footer>\n        </>\n    );\n};\n\nexport default App;\n","import React, { StrictMode } from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"./style/index.css\";\nimport App from \"./App\";\n\nrender(\n    <StrictMode>\n        <App />\n    </StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}