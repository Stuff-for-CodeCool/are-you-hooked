{"version":3,"sources":["App.js","index.js"],"names":["API_URL","App","useState","isSearching","setIsSearching","employees","setEmployees","filteredEmployees","setFilteredEmployees","error","setError","password","setPassword","verify","setVerify","useEffect","a","fetch","request","json","response","fetchEmployees","updateEmployees","id","difference","method","headers","body","JSON","stringify","salary","find","m","parseInt","update","handleDecrease","e","preventDefault","target","dataset","handleIncrease","className","type","onChange","errorStates","value","length","match","errorMessages","errors","filter","_","i","join","placeholder","onClick","onBlur","autoFocus","name","toLowerCase","includes","map","age","data-id","href","render","document","getElementById"],"mappings":"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","file":"static/js/main.a11a7c37.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\n// const API_URL = \"https://codecoolfrontendapi.herokuapp.com/\";\nconst API_URL = \"http://127.0.0.1:5000/\";\n\nconst App = () => {\n    const [isSearching, setIsSearching] = useState(false);\n    const [employees, setEmployees] = useState([]);\n    const [filteredEmployees, setFilteredEmployees] = useState(employees);\n\n    const [error, setError] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [verify, setVerify] = useState(\"\");\n\n    useEffect(() => {\n        const fetchEmployees = async () => {\n            const request = await fetch(API_URL + \"employees\");\n            const response = await request.json();\n            setEmployees(response);\n            setFilteredEmployees(response);\n        };\n\n        fetchEmployees();\n    }, []);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        setFilteredEmployees(\n            e.target.value.length\n                ? employees.filter((m) =>\n                      m.name\n                          .toLowerCase()\n                          .includes(e.target.value.toLowerCase())\n                  )\n                : employees\n        );\n        setError(\"\");\n    };\n\n    const updateEmployees = (id, difference) => {\n        const update = async () => {\n            const request = await fetch(API_URL + \"employees/update/\" + id, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                    salary:\n                        employees.find((m) => m.id === parseInt(id)).salary +\n                        difference,\n                }),\n            });\n            const response = await request.json();\n\n            if (response) {\n                setEmployees(response);\n                setFilteredEmployees(response);\n            }\n        };\n\n        update();\n    };\n\n    const handleDecrease = (e) => {\n        e.preventDefault();\n        updateEmployees(parseInt(e.target.dataset.id, 10), -20);\n    };\n\n    const handleIncrease = (e) => {\n        e.preventDefault();\n        updateEmployees(parseInt(e.target.dataset.id, 10), 20);\n    };\n\n    const verifyPassword = (e) => {\n        e.preventDefault();\n\n        const errorStates = [\n            e.target.value.length < 8,\n            e.target.value.match(/[0-9]+/g) === null,\n            e.target.value.match(/[a-z]+/g) === null,\n            e.target.value.match(/[A-Z]+/g) === null,\n            e.target.value.match(/[!\"#$%&'()*+,./:;<=>?@\\[\\]^_`{\\|}~-]+/g) ===\n                null,\n        ];\n        const errorMessages = [\n            \"at least 8 characters\",\n            \"digits\",\n            \"lowercase characters\",\n            \"uppercase characters\",\n            \"special characters\",\n        ];\n\n        const errors = errorMessages.filter((_, i) => errorStates[i]);\n\n        if (errors.length) {\n            setError(\n                errors.length === errorMessages.length\n                    ? \"\"\n                    : \"Password should contain \" + errors.join(\", \")\n            );\n        } else setError(\"\");\n\n        setPassword(e.target.value);\n    };\n\n    const verifyVerification = (e) => {\n        e.preventDefault();\n        setError(password !== e.target.value ? \"Passwords do not match\" : \"\");\n        setVerify(e.target.value);\n    };\n\n    return (\n        <>\n            <header>\n                <div className=\"container\">\n                    <h1 className=\"logo\">Are you Hooked?</h1>\n                </div>\n            </header>\n\n            <section>\n                <div className=\"container\">\n                    {error ? <p className=\"error\">{error}</p> : null}\n                    <input\n                        type=\"password\"\n                        onChange={verifyPassword}\n                        value={password}\n                        placeholder=\"Enter your password\"\n                    />\n                    <input\n                        type=\"password\"\n                        onChange={verifyVerification}\n                        value={verify}\n                        placeholder=\"Verify your password\"\n                    />\n                </div>\n            </section>\n\n            <section>\n                <div className=\"container\">\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th\n                                    onClick={() => setIsSearching(true)}\n                                    onBlur={() => setIsSearching(false)}\n                                >\n                                    {isSearching ? (\n                                        <input\n                                            type=\"text\"\n                                            autoFocus={true}\n                                            placeholder=\"Name...\"\n                                            onChange={handleSearch}\n                                        />\n                                    ) : (\n                                        \"Name\"\n                                    )}\n                                </th>\n                                <th>Age</th>\n                                <th>Salary</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {filteredEmployees.map(\n                                ({ id, name, age, salary }) => (\n                                    <tr key={id}>\n                                        <th>{id}</th>\n                                        <td>{name}</td>\n                                        <td>{age}</td>\n                                        <td>\n                                            <button\n                                                data-id={id}\n                                                onClick={handleDecrease}\n                                            >\n                                                -\n                                            </button>\n                                            <span>{salary}</span>\n                                            <button\n                                                data-id={id}\n                                                onClick={handleIncrease}\n                                            >\n                                                +\n                                            </button>\n                                        </td>\n                                    </tr>\n                                )\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n            </section>\n\n            <footer>\n                <div className=\"container\">\n                    <p>\n                        API hosted on{\" \"}\n                        <a href=\"https://www.heroku.com/\">heroku</a> with data\n                        from{\" \"}\n                        <a href=\"http://www.generatedata.com/\">GenerateData</a>\n                    </p>\n                </div>\n            </footer>\n        </>\n    );\n};\n\nexport default App;\n","import React, { StrictMode } from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"./style/index.css\";\nimport App from \"./App\";\n\nrender(\n    <StrictMode>\n        <App />\n    </StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}